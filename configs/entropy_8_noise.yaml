dataset:
  scale: 4
  search_subsample: 0.7 # Search is too slow. search is too slow. Therefore we use only part of the data.
  batch_size: 32
  crop_size: 45 # small image,  40x4=160, pathces are 200x200
  files_list:  /home/dev/data_main/SR/DIV2K/processed_200_st70/HR
  debug_mode: False # run on a small porion of data
  
arch:
  bits: [8] #bitwidth options  
  channels: 3 # input channels
  c_fixed: 48 # channels 
  scale: 4
  arch_pattern: # the number of blocks of different types
      # head: 1
      skip: 3
      tail: 1
      body: 4
      upsample: 1
  body_cells: 4  # body consists of several repetitions of identical blocks
  skip_mode: True # If False -> use ADM

env:
  run_name: 'SF_QUANT_ESA' # name of the experiment. Ignored when 'batch_exp.py' is used.
  gpu: 0 # Device. Ignored when 'batch_exp.py' is used.
  log_dir: /home/dev/MidasLogs/The_best_i_can/ # Directory for experiments output.
  im_dir: 'arch_images' # Subfolder of the experiment in which images of architectures are saved.
  workers: 2
  seed : 777 
  print_freq: 60 # print frequency
 
search:
  # From what epoch to start alpha updates
  warm_up: 9
  # Path to pretrained SUPERNET.
  load_path: #/home/dev/data_main/LOGS/QUANT/SEARCH_PRETRAIN_V2-2021-12-10-17/best.pth.tar
  
  penalty: 0.0 # Flops penalty. Ignored when 'batch_exp.py' is used.
  alpha_selector: softmax # Alpha transformation. 'softmax' recommended. 
  sparse_type: entropy # Sparsity penalty. Available options: 'l1_softmax', 'l1', 'entropy', 'none'.
  sparse_coef: 1e-3 #1e-4 # Coefficient. Recommend: 0.001 for entropy, 0.0001 for l1.
  optimizer: adam # Weights optimizer. Options: 'sgd', 'adam'
  quant_noise: True

  lr_scheduler: cosine # Lr scheduler for weights. 
  w_lr: 1e-3 # lr for weights
  w_momentum: 0.9 # Momentum for weights('sgd' only)
  w_weight_decay: 3e-8 # Weight decay for weights
  w_grad_clip: 5 # gradient clipping for weights
  epochs: 20 # number of search epochs
  alpha_lr:  3e-4 # lr for alpha
  alpha_weight_decay: 0 #1e-3 #weight decay for alpha
  temp_max: 10 # Only valid for alpha_selector=='gumbel'. 
  temp_min: 0.1 # Same as above
  
train:
  warm_up: 0 # Number of pretrain epochs in full precision.
  lr_scheduler: cosine # Lr scheduler. 
  lr : 1e-4 # Lr for weights
  weight_decay : 0 # Weight decay
  print_freq : 200 # print frequency
  epochs : 30 # Number of training epochs
  # Genotype of selected model. Ignored when 'batch_exp.py' is used. 
  genotype_path:  /home/dev/2021_09/QuanToaster/genotype_example_sr.gen


